# .gitleaks.toml
# Gitleaks configuration for Bridging Trust AI
# Stable, version-compatible approach with precise allowlists

# Global allowlist for files and patterns
[allowlist]
paths = [
    '''node_modules/.*''',
    '''\.next/.*''',
    '''out/.*''',
    '''\.git/.*''',
    '''coverage/.*''',
    '''test-results/.*''',
    '''playwright-report/.*''',
    '''\.nyc_output/.*''',
    '''dist/.*''',
    '''build/.*''',
    '''sbom\.json''',
    '''sbom-npm-list\.json''',
    '''security-audit\.json''',
    '''npm-audit\.json''',
    '''package-lock\.json''',
    '''yarn\.lock''',
    '''pnpm-lock\.yaml''',
    '''\.github/dependabot\.yml''',
    '''staticwebapp\.config\.json''',
    '''lighthouserc\.js''',
    '''\.cursorrules''',
    '''\.cursor/.*''',
    '''\.env\.example''',
    '''\.env\.template''',
    '''docs/.*\.md''',
    '''README\.md''',
    '''CHANGELOG\.md''',
    '''LICENSE''',
]
regexes = [
    '''//.*(?:secret|key|token|password)''',
    '''\*.*(?:secret|key|token|password)''',
    '''#.*(?:secret|key|token|password)''',
    '''<!--.*(?:secret|key|token|password).*-->''',
    '''\bExample:\s*.*(?:secret|key|token|password)''',
    '''\bTODO:\s*.*(?:secret|key|token|password)''',
    '''\bFIXME:\s*.*(?:secret|key|token|password)''',
]

# High-confidence secret patterns with precise rules
[[rules]]
id = "hardcoded-api-keys"
description = "Detect hardcoded API keys with high entropy"
regex = '''(?i)(?:api[_-]?key|apikey|secret[_-]?key|access[_-]?token|bearer[_-]?token)\s*[:=]\s*['"`]([A-Za-z0-9+/=]{20,})['"`]'''
entropy = 3.5
tags = ["api_key", "secret"]
[rules.allowlist]
regexes = [
    '''your_.*_here''',
    '''placeholder''',
    '''example''',
    '''test[_-].*''',
    '''mock[_-].*''',
    '''fake[_-].*''',
    '''dummy[_-].*''',
    '''RESEND_API_KEY''',
    '''SENDGRID_API_KEY''',
    '''AZURE_STATIC_WEB_APPS_API_TOKEN''',
    '''process\.env\.[A-Z_]+''',
]

[[rules]]
id = "hardcoded-passwords"
description = "Detect hardcoded passwords"
regex = '''(?i)(?:password|passwd|pwd)\s*[:=]\s*['"`]([^'"`\s]{8,})['"`]'''
entropy = 3.0
tags = ["password"]
[rules.allowlist]
regexes = [
    '''your_.*_here''',
    '''placeholder''',
    '''example''',
    '''test[_-].*''',
    '''mock[_-].*''',
    '''changeme''',
    '''password123''',
    '''SMTP_PASSWORD''',
    '''AUTH_SECRET''',
    '''process\.env\.[A-Z_]+''',
]

[[rules]]
id = "private-keys"
description = "Detect private keys"
regex = '''-----BEGIN [A-Z ]+PRIVATE KEY-----'''
tags = ["private_key"]

[[rules]]
id = "jwt-tokens"
description = "Detect JWT tokens"
regex = '''eyJ[A-Za-z0-9+/=]+\.eyJ[A-Za-z0-9+/=]+\.[A-Za-z0-9+/=_-]+'''
entropy = 4.0
tags = ["jwt"]
[rules.allowlist]
regexes = [
    '''eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ\.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c''', # example JWT
]

[[rules]]
id = "database-urls"
description = "Detect database connection strings"
regex = '''(?i)(?:mongodb|mysql|postgresql|postgres|redis)://[^\s'"]+'''
tags = ["database"]
[rules.allowlist]
regexes = [
    '''mongodb://localhost''',
    '''mysql://localhost''',
    '''postgresql://localhost''',
    '''postgres://localhost''',
    '''redis://localhost''',
    '''://user:password@''',
    '''://username:password@''',
]

[[rules]]
id = "high-entropy-strings"
description = "Detect high entropy strings (likely secrets)"
regex = '''['"`]([A-Za-z0-9+/=]{32,})['"`]'''
entropy = 4.5
tags = ["high_entropy"]
[rules.allowlist]
regexes = [
    # SHA-512 hashes (SBOM files)
    '''[a-f0-9]{128}''',
    # SHA-256 hashes
    '''[a-f0-9]{64}''',
    # Base64 encoded common strings
    '''dGVzdA==''', # "test"
    '''ZXhhbXBsZQ==''', # "example"
    '''cGxhY2Vob2xkZXI=''', # "placeholder"
]
