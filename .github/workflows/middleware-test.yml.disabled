name: Middleware Static Export Test

on:
  # Allow manual triggering for testing
  workflow_dispatch:
  # Uncomment to enable automatic runs on PR to main
  # pull_request:
  #   branches: [ main ]
  #   paths:
  #     - 'middleware.ts'
  #     - '__tests__/middleware.test.ts'
  #     - 'staticwebapp.config.json'

env:
  NODE_VERSION: '20.19.1'
  CI: true
  NEXT_PUBLIC_SKIP_DYNAMIC_ROUTES: 'true'
  NODE_ENV: 'development'

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Git configuration
        run: |
          git config --global core.longpaths true
          git config --global safe.directory '*'
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint -- --max-warnings=1000 || (echo "::warning::Linting found issues that should be fixed, but continuing with the build" && exit 0)

  unit-tests:
    name: Component Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Git configuration
        run: |
          git config --global core.longpaths true
          git config --global safe.directory '*'
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run component unit tests
        run: |
          # Run component tests using the test:ci-dev script for development mode
          npm run test:ci-dev || (echo "::warning::Some component tests failed, but continuing with the build" && exit 0)

  test-middleware:
    name: Test Middleware & Static Export
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Git configuration
        run: |
          git config --global core.longpaths true
          git config --global safe.directory '*'
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Validate middleware
        run: |
          echo "Running middleware validation checks..."
          # Check if middleware.ts exists and isn't empty
          if [ ! -f middleware.ts ] || [ ! -s middleware.ts ]; then
            echo "::error::middleware.ts file is missing or empty"
            exit 1
          fi
          echo "✅ middleware.ts file exists"
          
          # Check if staticwebapp.config.json exists
          if [ ! -f staticwebapp.config.json ] || [ ! -s staticwebapp.config.json ]; then
            echo "::error::staticwebapp.config.json file is missing or empty"
            exit 1
          fi
          echo "✅ staticwebapp.config.json file exists"
      
      - name: Run middleware tests
        run: npm run test:middleware
        
      - name: Test static export compatibility
        run: |
          echo "Testing middleware with static export..."
          # First ensure output: export is in next.config.mjs
          if ! grep -q "output: 'export'" next.config.mjs; then
            echo "::error::next.config.mjs is missing 'output: export' setting"
            exit 1
          fi
          echo "✅ next.config.mjs has static export enabled"
          
          # Set environment for build
          export NODE_ENV=production
          
          # Try building with static export 
          npm run build:static
          echo "✅ Static build successful"
          
          # Run static export helper
          npm run static-export
          echo "✅ Static export successful"
        
      - name: Verify output directory
        run: |
          # Check if out directory exists
          if [ ! -d "out" ]; then
            echo "::error::Static export failed; 'out' directory not found"
            exit 1
          fi
          
          # Verify key files are present in output
          if [ ! -f "out/staticwebapp.config.json" ]; then
            echo "::error::staticwebapp.config.json missing from output directory"
            exit 1
          fi
          
          # List output directory structure for debugging
          echo "Static export output structure:"
          find out -type f | sort | head -n 20
          
          echo "✅ Static export output directory verified"
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: static-export
          path: |
            out/
            middleware.ts
            staticwebapp.config.json
          retention-days: 7 