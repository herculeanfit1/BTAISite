# Minimal Cost-Optimized Azure Deployment Workflow
# 
# This workflow assumes you build locally and only uses GitHub Actions
# for deployment orchestration to minimize compute costs.

name: Azure Deployment (Cost Optimized)

on:
  # Only run on push to main with specific paths to avoid unnecessary runs
  push:
    branches: [ main ]
    paths: [ 'out/**', '.github/workflows/**' ]
  # Manual trigger for when you want to deploy local builds
  workflow_dispatch:

# Minimize job time to reduce costs
env:
  NODE_VERSION: '20.19.1'

jobs:
  # Lightweight deployment job - no building, just deployment
  deploy_pre_built:
    # Only run if we have pre-built files OR manual trigger
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[deploy]')
    runs-on: ubuntu-latest
    name: Deploy Pre-Built Site
    steps:
      # Minimal checkout - only get deployment configs
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            out
            staticwebapp.config.json
            .github
          sparse-checkout-cone-mode: false

      # Check if pre-built files exist
      - name: Verify pre-built files
        run: |
          if [ ! -d "out" ] || [ ! -f "out/index.html" ]; then
            echo "❌ No pre-built files found. Please run locally:"
            echo "npm run build:static && npm run static-export"
            echo "Then commit the 'out' directory and push with '[deploy]' in commit message"
            exit 1
          fi
          echo "✅ Pre-built files found, proceeding with deployment"

      # Deploy to Azure - this is the only billable step
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@latest
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_HAPPY_ROCK_0A93FDF0F }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "out"
          api_location: "api"
          output_location: ""
          is_static_export: true

      - name: Log successful deployment
        run: echo "✅ Deployment completed successfully"

  # Optional: Branch protection job (runs quickly, low cost)
  branch_protection:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: PR Validation
    steps:
      - name: Validate PR
        run: |
          echo "✅ PR validation passed"
          echo "Build and test locally before merging" 